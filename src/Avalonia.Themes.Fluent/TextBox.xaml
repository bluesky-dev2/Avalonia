<Styles xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Design.PreviewWith>
    <Border Padding="20">
      <TextBox Text="Sample"
               FontSize="20"
               Width="100"
               Classes="clearButton"
               TextAlignment="Center"/>
    </Border>
  </Design.PreviewWith>
  
  <Styles.Resources>
    <Thickness x:Key="TextBoxTopHeaderMargin">0,0,0,4</Thickness>
    <StreamGeometry x:Key="TextBoxClearButtonData">M 11.416016,10 20,1.4160156 18.583984,0 10,8.5839846 1.4160156,0 0,1.4160156 8.5839844,10 0,18.583985 1.4160156,20 10,11.416015 18.583984,20 20,18.583985 Z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxRevealButtonData">m10.051 7.0032c2.215 0 4.0105 1.7901 4.0105 3.9984s-1.7956 3.9984-4.0105 3.9984c-2.215 0-4.0105-1.7901-4.0105-3.9984s1.7956-3.9984 4.0105-3.9984zm0 1.4994c-1.3844 0-2.5066 1.1188-2.5066 2.499s1.1222 2.499 2.5066 2.499 2.5066-1.1188 2.5066-2.499-1.1222-2.499-2.5066-2.499zm0-5.0026c4.6257 0 8.6188 3.1487 9.7267 7.5613 0.10085 0.40165-0.14399 0.80877-0.54686 0.90931-0.40288 0.10054-0.81122-0.14355-0.91208-0.54521-0.94136-3.7492-4.3361-6.4261-8.2678-6.4261-3.9334 0-7.3292 2.6792-8.2689 6.4306-0.10063 0.40171-0.50884 0.64603-0.91177 0.54571s-0.648-0.5073-0.54737-0.90901c1.106-4.4152 5.1003-7.5667 9.728-7.5667z</StreamGeometry>
  </Styles.Resources>

  <Style Selector="TextBox">
    <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
    <Setter Property="Background" Value="{DynamicResource TextControlBackground}" />
    <Setter Property="CaretBrush" Value="{DynamicResource TextControlForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}" />
    <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}" />
    <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />    
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
    <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
    <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel>

          <!-- TODO bind Content -> Header and ContentTemplate -> HeaderTemplate -->
          <ContentPresenter x:Name="HeaderContentPresenter"
                            DockPanel.Dock="Top"
                            TextBlock.FontWeight="Normal"
                            TextBlock.Foreground="{DynamicResource TextControlHeaderForeground}"
                            IsVisible="False"
                            Margin="{DynamicResource TextBoxTopHeaderMargin}" />

          <Panel>
            <Border
              Name="border"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{DynamicResource ControlCornerRadius}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}">
            </Border>

            <Border
              Margin="{TemplateBinding BorderThickness}">
              <Grid ColumnDefinitions="Auto,*,Auto" >
                <ContentPresenter Grid.Column="0" Grid.ColumnSpan="1" Content="{TemplateBinding InnerLeftContent}"/>
                <DockPanel Grid.Column="1" Grid.ColumnSpan="1" Margin="{TemplateBinding Padding}">
                  <TextBlock Name="floatingWatermark"
                            Foreground="{DynamicResource SystemAccentColor}"
                            FontSize="{DynamicResource FontSizeSmall}"
                            Text="{TemplateBinding Watermark}"
                            DockPanel.Dock="Top">
                    <TextBlock.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                          <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                Path="UseFloatingWatermark"/>
                          <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                Path="Text"
                                Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
                        </MultiBinding>
                    </TextBlock.IsVisible>
                  </TextBlock>

                  <DataValidationErrors>
                    <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                      <Panel>
                        <TextBlock Name="watermark"
                                Opacity="0.5"
                                Text="{TemplateBinding Watermark}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}"
                                IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <!-- TODO eliminate this margin... text layout issue? -->
                        <TextPresenter Name="PART_TextPresenter"
                                      Margin="0 1 0 0"
                                      Text="{TemplateBinding Text, Mode=TwoWay}"
                                      CaretIndex="{TemplateBinding CaretIndex}"
                                      SelectionStart="{TemplateBinding SelectionStart}"
                                      SelectionEnd="{TemplateBinding SelectionEnd}"
                                      TextAlignment="{TemplateBinding TextAlignment}"
                                      TextWrapping="{TemplateBinding TextWrapping}"
                                      PasswordChar="{TemplateBinding PasswordChar}"
                                      RevealPassword="{TemplateBinding RevealPassword}"
                                      SelectionBrush="{TemplateBinding SelectionBrush}"
                                      SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                      CaretBrush="{TemplateBinding CaretBrush}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/> 
                      </Panel>
                    </ScrollViewer>
                  </DataValidationErrors>
                </DockPanel>
                <ContentPresenter Grid.Column="2" Grid.ColumnSpan="1" Content="{TemplateBinding InnerRightContent}"/>
              </Grid>
            </Border>
          </Panel>
        </DockPanel>
      </ControlTemplate>
    </Setter>
  </Style>

  <!-- Disabled State -->
  <Style Selector="TextBox:disabled">
    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
  </Style>

  <Style Selector="TextBox:disabled /template/ Border#border">
    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
  </Style>

  <Style Selector="TextBox:disabled /template/ TextBlock#watermark, TextBox:disabled /template/ TextBlock#floatingWatermark">
    <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
  </Style>

  <!-- PointerOver State-->
  <Style Selector="TextBox:disabled">
    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
  </Style>

  <Style Selector="TextBox:pointerover /template/ Border#border">
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
  </Style>

  <Style Selector="TextBox:pointerover /template/ TextBlock#watermark, TextBox:pointerover /template/ TextBlock#floatingWatermark">
    <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}" />
  </Style>

  <!-- Focused State -->
  <Style Selector="TextBox:focus">
    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
  </Style>

  <Style Selector="TextBox:focus /template/ TextBlock#watermark, TextBox:focus /template/ TextBlock#floatingWatermark">
    <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundFocused}" />
  </Style>

  <Style Selector="TextBox:focus /template/ Border#border">
    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}"/>
    <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
  </Style>

  <Style Selector="TextBox:error /template/ Border#border">
    <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}"/>
  </Style>

  <Style Selector="TextBox /template/ DockPanel">
    <Setter Property="Cursor" Value="IBeam" />
  </Style>

  <Style Selector="TextBox.revealPasswordButton[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
    <Setter Property="InnerRightContent">
      <Template>
        <ToggleButton Classes="PasswordBoxRevealButton"
                      IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}" />
      </Template>
    </Setter>
  </Style>

  <Style Selector="TextBox.clearButton[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
    <Setter Property="InnerRightContent">
      <Template>
        <Button Classes="TextBoxClearButton"
                Command="{Binding $parent[TextBox].Clear}" />
      </Template>
    </Setter>
  </Style>

  <Style Selector="ToggleButton.PasswordBoxRevealButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="PART_ButtonLayoutBorder"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Path x:Name="PART_GlyphElement"
                  Data="{StaticResource PasswordBoxRevealButtonData}"
                  Height="10"
                  Width="12"
                  Stretch="Uniform"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Button.TextBoxClearButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="PART_ButtonLayoutBorder"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Path x:Name="PART_GlyphElement"
                  Data="{StaticResource TextBoxClearButtonData}"
                  Height="10"
                  Width="10"
                  Stretch="Uniform"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBox.Button Normal State -->
  <Style Selector="Button.TextBoxClearButton, ToggleButton.PasswordBoxRevealButton">
    <Setter Property="MinWidth" Value="34" />
    <Setter Property="Width" Value="{Binding $self.Bounds.Height}"/>
    <Setter Property="Focusable" Value="False" />
    <Setter Property="VerticalAlignment" Value="Stretch" />    
  </Style>
  <Style Selector="Button.TextBoxClearButton /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton /template/ Border#PART_ButtonLayoutBorder">
    <Setter Property="Background" Value="{DynamicResource TextControlButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrush}" />
  </Style>
  <Style Selector="Button.TextBoxClearButton /template/ Path#PART_GlyphElement,
                   ToggleButton.PasswordBoxRevealButton /template/ Path#PART_GlyphElement">
    <Setter Property="Fill" Value="{DynamicResource TextControlButtonForeground}" />
  </Style>

  <!-- TextBox.Button PointerOver State -->
  <Style Selector="Button.TextBoxClearButton:pointerover /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton:pointerover /template/ Border#PART_ButtonLayoutBorder">
    <Setter Property="Background" Value="{DynamicResource TextControlButtonBackgroundPointerOver}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}" />
  </Style>
  <Style Selector="Button.TextBoxClearButton:pointerover /template/ Path#PART_GlyphElement,
                   ToggleButton.PasswordBoxRevealButton:pointerover /template/ Path#PART_GlyphElement">
    <Setter Property="Fill" Value="{DynamicResource TextControlButtonForegroundPointerOver}" />
  </Style>

  <!-- TextBox.Button Pressed State -->
  <Style Selector="Button.TextBoxClearButton:pressed /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton:pressed /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton:checked /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton:indeterminate /template/ Border#PART_ButtonLayoutBorder">
    <Setter Property="Background" Value="{DynamicResource TextControlButtonBackgroundPressed}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPressed}" />
  </Style>
  <Style Selector="Button.TextBoxClearButton:pressed /template/ Path#PART_GlyphElement,
                   ToggleButton.PasswordBoxRevealButton:pressed /template/ Path#PART_GlyphElement,
                   ToggleButton.PasswordBoxRevealButton:checked /template/ Path#PART_GlyphElement,
                   ToggleButton.PasswordBoxRevealButton:indeterminate /template/ Path#PART_GlyphElement">
    <Setter Property="Fill" Value="{DynamicResource TextControlButtonForegroundPressed}" />
  </Style>

  <!-- TextBox.Button Disabled State -->
  <Style Selector="Button.TextBoxClearButton:disabled /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.PasswordBoxRevealButton:disabled /template/ Border#PART_ButtonLayoutBorder">
    <Setter Property="Opacity" Value="0" />
  </Style>

</Styles>
